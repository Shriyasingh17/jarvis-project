import pyttsx3
import datetime
import speech_recognition as sr
import wikipedia
# from utils import opening_text
from random import choice
import webbrowser
import os
import subprocess
import pywhatkit as kit
import openai
import smtplib
# import EmailMessage
 



def speak(audio):
     engine.say(audio)
     engine.runAndWait()

# def wishMe():
#     hour = int(datetime.datetime.now().hour)
#     if hour>=0 and hour<12:
#         speak("good morning!")
        
#     elif hour>=12 and hour<18:
#         speak("good afternoon!")
        
#     else:
#         speak("good evening!")

engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
print(voices[0].id)
engine.setProperty('voice',voices[0].id)





def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("good morning!")
        
    elif hour>=12 and hour<18:
        speak("good afternoon!")
        
    else:
        speak("good evening!")
        
speak("i am jarvis sir,please tell me how may i help you")

def takeCommand():
    # it takes microphone input fron the user and return string outputs
    
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold=1
        audio = r.listen(source)
        
        try:
            print("recognizing...")
            query = r.recognize_google(audio, language='en-in')
            
            print(f"user said:{query}\n")
           
        
        except Exception as e:
            # print(e)
            
            print("sorry, i could not understand.could you please say that again?...")  
            query='none' 
        return query 
        
def sendEmail(to,content):
        server = smtplib.SMTP('smtp.gmail.com',587)
        server.ehlo()
        server.starttls()
        server.login('ss9244062@gmail.com','pkzp rubb kyru qzld')
        server.sendmail('ss9244062@gmail.com',to,content)
        server.close()      
if(__name__=="__main__"):
    wishMe()
    if 1:
           query =takeCommand().lower()
   
if ('wikipedia' in query):
        speak('searching wikipedia...')
        query = query.replace("wikipedia","")
        results = wikipedia.summary(query, sentences=2)
        speak("according  to wikipedia")
        print(results)
        speak(results)
elif ('open youtube'in query):
    webbrowser.open("youtube.com")
# def searchYoutube(query):
# elif ('open Youtube' in query):
#     # from SearchNow import searchYoutube
#     # searchYoutube(query)
#     webbrowser.open_new_tab("http://www.youtube.com")

    # def open_youtube_link(link):
    # youtube_link = "https://www.youtube.com/results?search_query="
    # # webbrowser.open(link)
    # youtube_link = "https://www.youtube.com/watch"
    # open_youtube_link(youtube_link)
    # elif open_youtube_link(link):
    # kit.playonyt(link)
    # open_youtube_link(youtube_link)
    # youtube_link = "https://www.youtube.com/watch?v=YOUR_VIDEO_ID_HERE"
elif ('open google' in query):
    webbrowser.open_new_tab("http:\\www.google.com")
elif ('open stackoverflow' in query):
    webbrowser.open_new_tab("https://stackoverflow.com")
elif ('play music' in query):
    music_dir="C:\Windows\music_dir"
    songs= os.listdir(music_dir)
    print(songs)
    os.startfile(os.path.join(music_dir,songs[0]))
elif ('the time' in query):
    get_time = datetime.datetime.now().strftime("%H:%M:%S")
    speak((get_time))

elif ('open code' in query):
    codePath="F:\\Shreya\\Microsoft VS Code\\Code.exe"
    os.startfile(codePath)

# elif('open excel' in query):
#     codePath='C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE'
#     os.startfile(codePath)
    



elif('email to shreya' in query): 
    try:
          speak("what should i say?")
          content= takeCommand()
          to ="ss9244062@gmail.com"
          sendEmail(to,content)
          speak("Email has been sent!")
    except Exception as e: 
          print(e)
          speak("sorry my friend shreya yarr.i am not able to send this email")
